---
const { position, url, location, team, datePosted, salary, employmentType } = Astro.props;

// Format date for display
const formattedDate = new Date(datePosted).toLocaleDateString('en-US', {
  month: 'short',
  day: 'numeric',
  year: 'numeric'
});

// Format salary for display using template literals
const formatSalary = (salary) => {
  const formatted = new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: salary.currency,
    minimumFractionDigits: 0
  }).format(salary.value);
  return `${formatted}/${salary.unitText.toLowerCase()}`;
};
---

<tr class="hover:bg-slate-50">
  <td class="py-4">
    <a href={url} class="group">
      <div class="flex flex-col">
        <span class="text-blue-600 font-medium group-hover:text-blue-700">
          {position}
        </span>
        <span class="text-sm text-slate-500 mt-1">
          Posted {formattedDate}
        </span>
      </div>
    </a>
  </td>
  <td class="px-3 py-4 text-sm text-slate-500">
    {team}
  </td>
  <td class="px-3 py-4 text-sm text-slate-500">
    {location}
  </td>
  <td class="px-3 py-4 text-sm text-slate-500">
    {employmentType}
  </td>
  <td class="px-3 py-4 text-sm text-slate-500">
    {formatSalary(salary)}
  </td>
</tr>
